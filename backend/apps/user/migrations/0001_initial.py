# Generated by Django 5.2.4 on 2025-08-03 21:13

import apps.user.models
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Create Date')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Update Date')),
                ('mobile', models.CharField(db_index=True, max_length=11, unique=True, validators=[django.core.validators.RegexValidator(code='invalid_mobile', message='شماره موبایل باید با 09 شروع شود و 11 رقم باشد', regex='^09\\d{9}$')], verbose_name='Mobile')),
                ('name', models.CharField(db_index=True, max_length=50, verbose_name='Name')),
                ('slug', models.SlugField(editable=False, unique=True, verbose_name='Slug')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active?')),
                ('is_superuser', models.BooleanField(default=False, verbose_name='Is Superuser?')),
                ('is_staff', models.BooleanField(default=False, verbose_name='Is Staff?')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User Account',
                'verbose_name_plural': 'User Accounts',
                'ordering': ('-created_at',),
            },
            managers=[
                ('objects', apps.user.models.AccountManager()),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Create Date')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Update Date')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, unique=True, verbose_name='Email')),
                ('is_email_verified', models.BooleanField(default=False, verbose_name='Is Email Verified?')),
                ('address', models.CharField(blank=True, max_length=120, null=True, verbose_name='Address')),
                ('birth_date', models.DateField(blank=True, db_index=True, null=True, verbose_name='Birth Day')),
                ('sex', models.BooleanField(choices=[(True, 'Male'), (False, 'Female')], default=True, verbose_name='Sex')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'Profile',
                'verbose_name_plural': 'Profiles',
            },
        ),
    ]
