services:
  db:
    image: postgres:18-alpine
    restart: always
    env_file:
      - .env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    expose:
      - "5432"

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: prod
    command: >
      gunicorn config.wsgi:application
      --bind 0.0.0.0:8000
      --log-level error
      --access-logfile /app/logs/gunicorn_access.log
      --error-logfile /app/logs/gunicorn_errors.log
    restart: always
    env_file:
      - .env
    volumes:
      - ./backend:/app
      - static_volume:/app/staticfiles
      - media_volume:/app/media
      - ./logs:/app/logs
    expose:
      - "8000"
    depends_on:
      - db
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
    restart: always
    env_file:
      - .env
    expose:
      - "3000"
    depends_on:
      - backend

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile.prod
    restart: always
    depends_on:
      - backend
      - frontend
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - static_volume:/app/staticfiles:ro
      - media_volume:/app/media:ro
      - /etc/letsencrypt:/etc/letsencrypt:ro

volumes:
  postgres_data:
  static_volume:
  media_volume:
